/*
 * This file is generated by jOOQ.
*/
package ru.highloadcup.generated.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ru.highloadcup.generated.tables.Visit;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VisitRecord extends UpdatableRecordImpl<VisitRecord> implements Record5<Integer, Integer, Integer, Timestamp, Integer> {

    private static final long serialVersionUID = 1482039004;

    /**
     * Setter for <code>VISIT.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>VISIT.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>VISIT.LOCATION_ID</code>.
     */
    public void setLocationId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>VISIT.LOCATION_ID</code>.
     */
    public Integer getLocationId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>VISIT.USER_ID</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>VISIT.USER_ID</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>VISIT.VISITED_AT</code>.
     */
    public void setVisitedAt(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>VISIT.VISITED_AT</code>.
     */
    public Timestamp getVisitedAt() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>VISIT.MARK</code>.
     */
    public void setMark(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>VISIT.MARK</code>.
     */
    public Integer getMark() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Timestamp, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Integer, Timestamp, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Visit.VISIT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Visit.VISIT.LOCATION_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Visit.VISIT.USER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return Visit.VISIT.VISITED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Visit.VISIT.MARK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getLocationId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getUserId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getVisitedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getMark();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VisitRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VisitRecord value2(Integer value) {
        setLocationId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VisitRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VisitRecord value4(Timestamp value) {
        setVisitedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VisitRecord value5(Integer value) {
        setMark(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VisitRecord values(Integer value1, Integer value2, Integer value3, Timestamp value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VisitRecord
     */
    public VisitRecord() {
        super(Visit.VISIT);
    }

    /**
     * Create a detached, initialised VisitRecord
     */
    public VisitRecord(Integer id, Integer locationId, Integer userId, Timestamp visitedAt, Integer mark) {
        super(Visit.VISIT);

        set(0, id);
        set(1, locationId);
        set(2, userId);
        set(3, visitedAt);
        set(4, mark);
    }
}
